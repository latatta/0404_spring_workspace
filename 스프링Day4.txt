[참고] 트랜잭션과 연관된 주요 sql 명령 : 
DMl 명령 insert, update, delete 실행에 대한 commit(승인/저장), rollback(취소)


1) mybatis-spring 트랜잭션 관리 실습

주요내용
1. 시퀀스로 생성된 값 insert 후에 받아오기
	<insert id="insert" parameterType="BookRent" useGeneratedKeys="true" 	keyColumn="rent_no" 	keyProperty="rent_no">

2. 1번 값으로 update 조건값을 설정합니다.

3. 트랜잭션 처리를 위한 bean 설정하기
<!-- 5. 트랜잭션 제어 사용하기위한 설정 -->
	<bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		id="transactionManager">
		<property name="dataSource" ref="datasource"/>		
	</bean>

4. 트랜잭션 처리를 위한 서비스 메소드에 어노테이션
	@Transaction 설정하기

///////////////////////////////////////////////////////////////////////

2) Test 라이브러리 : junit

1. 테스트 코드는 src/test/java 소스폴더에 작성합니다. 최종적으로 패키징(배포파일)에서 제외됩니다.
	day4.test 패키지 생성 후 우클릭 new - JUnit Test Case (버전 JUnit Jupiter)

2. BookRentTest.java에서 테스트 코드 작성하고 실행
	: main 메소드 대신에 테스트할 내용을 메소드 단위로 작성해서 실행할 수 있습니다. (소스파일참고)



